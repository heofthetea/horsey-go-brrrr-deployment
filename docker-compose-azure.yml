services:
  api:
    image: heofthetea/horsey-go-brrrr-be:jvm-latest
    container_name: api
    restart: unless-stopped
    environment:
      QUARKUS_OIDC_AUTH_SERVER_URL: https://${AZURE_IP}/auth/realms/horsey-realm
      QUARKUS_DATASOURCE_USERNAME: ${POSTGRES_USER}
      QUARKUS_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/horsey_api
      QUARKUS_HTTP_PORT: 8085
      QUARKUS_HTTP_CORS_HEADERS: "*"
      QUARKUS_HTTP_CORS_ORIGINS: "*"
      QUARKUS_HTTP_CORS_METHODS: "GET,POST,PUT,DELETE,OPTIONS"
      QUARKUS_LOG_LEVEL: INFO
    networks:
      - horsey-net
    depends_on:
      - postgres
      - keycloak

  frontend:
    image: heofthetea/horsey-go-brrrr-fe:latest
    container_name: frontend
    restart: unless-stopped
    environment:
      HORSEY_API_BASE_URL: https://${AZURE_IP}/api
      HORSEY_WEBSOCKET_URL: wss://${AZURE_IP}/api/ws
      HORSEY_KEYCLOAK_URL: https://${AZURE_IP}/auth
      HORSEY_KEYCLOAK_REALM: horsey-realm
      HORSEY_KEYCLOAK_CLIENT_ID: horsey-frontend
    networks:
      - horsey-net
    depends_on:
      - api
      - postgres

  postgres:
    image: postgres:17.4-bookworm
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: postgres
    volumes:
      - horsey_pgdata:/var/lib/postgresql/data
      - ./postgres/:/docker-entrypoint-initdb.d
    networks:
      - horsey-net

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.3
    container_name: keycloak
    restart: unless-stopped
    command:
      [
        "start-dev",
        "--import-realm",
        "--proxy-headers=xforwarded",
        "--spi-x509cert-lookup-provider=nginx",
      ]
    volumes:
      - ./keycloak/:/opt/keycloak/data/import/
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN_USERNAME}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HOSTNAME: ${AZURE_IP}
      KC_HOSTNAME_STRICT: "true"
      KC_HTTP_ENABLED: "true"
      KC_HTTP_PORT: 8081
      KC_HTTP_RELATIVE_PATH: /auth # listen under /auth - way easier for nginx
      KC_DB_URL: jdbc:postgresql://postgres:5432/horsey_keycloak
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_PROXY_ADDRESS_FORWARDING: true
      KC_DB: postgres
    networks:
      - horsey-net

    depends_on:
      - postgres

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - api
      - frontend
      - keycloak
    networks:
      - horsey-net

volumes:
  horsey_pgdata:

networks:
  horsey-net:
